static 'static'	 [StartOfLine]	Loc=<./tmp/code_0.c:1:1>
void 'void'	 [LeadingSpace]	Loc=<./tmp/code_0.c:1:8>
identifier 'do_unassigned_access'	 [LeadingSpace]	Loc=<./tmp/code_0.c:1:13>
l_paren '('		Loc=<./tmp/code_0.c:1:33>
identifier 'target_ulong'		Loc=<./tmp/code_0.c:1:34>
identifier 'addr'	 [LeadingSpace]	Loc=<./tmp/code_0.c:1:47>
comma ','		Loc=<./tmp/code_0.c:1:51>
int 'int'	 [LeadingSpace]	Loc=<./tmp/code_0.c:1:53>
identifier 'is_write'	 [LeadingSpace]	Loc=<./tmp/code_0.c:1:57>
comma ','		Loc=<./tmp/code_0.c:1:65>
int 'int'	 [LeadingSpace]	Loc=<./tmp/code_0.c:1:67>
identifier 'is_exec'	 [LeadingSpace]	Loc=<./tmp/code_0.c:1:71>
comma ','		Loc=<./tmp/code_0.c:1:78>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:3:27>
identifier 'is_asi'	 [LeadingSpace]	Loc=<./tmp/code_0.c:3:31>
comma ','		Loc=<./tmp/code_0.c:3:37>
int 'int'	 [LeadingSpace]	Loc=<./tmp/code_0.c:3:39>
identifier 'size'	 [LeadingSpace]	Loc=<./tmp/code_0.c:3:43>
r_paren ')'		Loc=<./tmp/code_0.c:3:47>
./tmp/code_0.c:5:2: error: #else without #if
#else
 ^
void 'void'	 [StartOfLine]	Loc=<./tmp/code_0.c:7:1>
identifier 'do_unassigned_access'	 [LeadingSpace]	Loc=<./tmp/code_0.c:7:6>
l_paren '('		Loc=<./tmp/code_0.c:7:26>
identifier 'target_phys_addr_t'		Loc=<./tmp/code_0.c:7:27>
identifier 'addr'	 [LeadingSpace]	Loc=<./tmp/code_0.c:7:46>
comma ','		Loc=<./tmp/code_0.c:7:50>
int 'int'	 [LeadingSpace]	Loc=<./tmp/code_0.c:7:52>
identifier 'is_write'	 [LeadingSpace]	Loc=<./tmp/code_0.c:7:56>
comma ','		Loc=<./tmp/code_0.c:7:64>
int 'int'	 [LeadingSpace]	Loc=<./tmp/code_0.c:7:66>
identifier 'is_exec'	 [LeadingSpace]	Loc=<./tmp/code_0.c:7:70>
comma ','		Loc=<./tmp/code_0.c:7:77>
int 'int'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:9:27>
identifier 'is_asi'	 [LeadingSpace]	Loc=<./tmp/code_0.c:9:31>
comma ','		Loc=<./tmp/code_0.c:9:37>
int 'int'	 [LeadingSpace]	Loc=<./tmp/code_0.c:9:39>
identifier 'size'	 [LeadingSpace]	Loc=<./tmp/code_0.c:9:43>
r_paren ')'		Loc=<./tmp/code_0.c:9:47>
./tmp/code_0.c:11:2: error: #endif without #if
#endif
 ^
l_brace '{'	 [StartOfLine]	Loc=<./tmp/code_0.c:13:1>
identifier 'CPUState'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:15:5>
star '*'	 [LeadingSpace]	Loc=<./tmp/code_0.c:15:14>
identifier 'saved_env'		Loc=<./tmp/code_0.c:15:15>
semi ';'		Loc=<./tmp/code_0.c:15:24>
identifier 'saved_env'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:23:5>
equal '='	 [LeadingSpace]	Loc=<./tmp/code_0.c:23:15>
identifier 'env'	 [LeadingSpace]	Loc=<./tmp/code_0.c:23:17>
semi ';'		Loc=<./tmp/code_0.c:23:20>
identifier 'env'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:25:5>
equal '='	 [LeadingSpace]	Loc=<./tmp/code_0.c:25:9>
identifier 'cpu_single_env'	 [LeadingSpace]	Loc=<./tmp/code_0.c:25:11>
semi ';'		Loc=<./tmp/code_0.c:25:25>
if 'if'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:39:5>
l_paren '('	 [LeadingSpace]	Loc=<./tmp/code_0.c:39:8>
identifier 'is_exec'		Loc=<./tmp/code_0.c:39:9>
r_paren ')'		Loc=<./tmp/code_0.c:39:16>
identifier 'raise_exception'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:41:9>
l_paren '('		Loc=<./tmp/code_0.c:41:24>
identifier 'TT_CODE_ACCESS'		Loc=<./tmp/code_0.c:41:25>
r_paren ')'		Loc=<./tmp/code_0.c:41:39>
semi ';'		Loc=<./tmp/code_0.c:41:40>
else 'else'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:43:5>
identifier 'raise_exception'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:45:9>
l_paren '('		Loc=<./tmp/code_0.c:45:24>
identifier 'TT_DATA_ACCESS'		Loc=<./tmp/code_0.c:45:25>
r_paren ')'		Loc=<./tmp/code_0.c:45:39>
semi ';'		Loc=<./tmp/code_0.c:45:40>
identifier 'env'	 [StartOfLine] [LeadingSpace]	Loc=<./tmp/code_0.c:49:5>
equal '='	 [LeadingSpace]	Loc=<./tmp/code_0.c:49:9>
identifier 'saved_env'	 [LeadingSpace]	Loc=<./tmp/code_0.c:49:11>
semi ';'		Loc=<./tmp/code_0.c:49:20>
r_brace '}'	 [StartOfLine]	Loc=<./tmp/code_0.c:51:1>
eof ''		Loc=<./tmp/code_0.c:51:2>
2 errors generated.
